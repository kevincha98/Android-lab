<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:tools="http://schemas.android.com/tools"
android:layout_width="match_parent"
android:layout_height="match_parent"
android:orientation="vertical"
tools:context=".MainActivity"
tools:ignore="HardcodedText">
<TextView
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_gravity="center"
android:textSize="20dp"
android:layout_marginTop="20dp"
android:text="Form Validation"/>
<EditText
android:id="@+id/firstName"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="16dp"
android:layout_marginTop="16dp"
android:layout_marginEnd="16dp"
android:hint="First Name"
android:inputType="text" />
<EditText
android:id="@+id/lastName"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="16dp"
android:layout_marginTop="16dp"
android:layout_marginEnd="16dp"
android:hint="Last Name"
android:inputType="text" />
<EditText
android:id="@+id/email"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="16dp"
android:layout_marginTop="16dp"
android:layout_marginEnd="16dp"
android:hint="Email"
android:inputType="textEmailAddress" />
<EditText
android:id="@+id/password"
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginStart="16dp"
android:layout_marginTop="16dp"
android:layout_marginEnd="16dp"
android:hint="Password"
android:inputType="textPassword" />
<LinearLayout
android:layout_width="match_parent"
android:layout_height="wrap_content"
android:layout_marginTop="8dp"
android:gravity="end"
android:orientation="horizontal">
<Button
android:id="@+id/cancelButton"
style="@style/Widget.AppCompat.Button.Borderless"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginEnd="180dp"
android:text="CANCEL"
android:textColor="@color/black" />
<Button
android:id="@+id/proceedButton"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:layout_marginEnd="20dp"
android:backgroundTint="@color/black"
android:text="PROCEED"
android:textColor="@android:color/white"/>
</LinearLayout>
</LinearLayout>




package com.example.program4;
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
public class MainActivity extends AppCompatActivity {
Button bCancel, bProceed;
EditText etFirstName, etLastName, etEmail, etPassword;
boolean isAllFieldsChecked = false;
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
bProceed = findViewById(R.id.proceedButton);
bCancel = findViewById(R.id.cancelButton);
etFirstName = findViewById(R.id.firstName);
etLastName = findViewById(R.id.lastName);
etEmail = findViewById(R.id.email);
etPassword = findViewById(R.id.password);
bProceed.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
isAllFieldsChecked = CheckAllFields();
if (isAllFieldsChecked) {
Intent i = new Intent(MainActivity.this, MainActivity.class);
startActivity(i);
} } });
bCancel.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
MainActivity.this.finish();
System.exit(0);
} }); }
private boolean CheckAllFields() {
if (etFirstName.length() == 0) {
etFirstName.setError("This field is required");
return false;
}
if (etLastName.length() == 0) {
etLastName.setError("This field is required");
return false;
}
if (etEmail.length() == 0) {
etEmail.setError("Email is required");
return false;
}
if (etPassword.length() == 0) {
etPassword.setError("Password is required");
return false;
} else if (etPassword.length() < 8) {
etPassword.setError("Password must be minimum 8 characters");
return false;
}
return true;
}}
